// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Home row mods macro
#define HRML(k1,k2,k3) &ht LALT k1  &ht LCTRL k2  &ht LGUI k3
#define HRMR(k1,k2,k3) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3

/ {
    combos {
        compatible = "zmk,combos";
        combo_qj {
            timeout-ms = <100>;
            key-positions = <21 22>;
            bindings = <&kp ESC>;
        };
        combo_slsh {
            timeout-ms = <100>;
            key-positions = <18 19>;
            bindings = <&kp SLASH>;
        };
        combo_enter {
            timeout-ms = <100>;
            key-positions = <17 18>;
            bindings = <&lt 3 ENTER>;
        };
        combo_opposite_enter {
            timeout-ms = <100>;
            key-positions = <11 12>;
            bindings = <&mo 3>;
        };
        combo_scln {
            timeout-ms = <100>;
            key-positions = <20 21>;
            bindings = <&kp SEMICOLON>;
        };
    };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
            &kp SQT    &kp COMMA  &kp DOT    &kp P      &kp Y          &kp F      &kp G      &kp C      &kp R      &kp L
            &kp A     HRML(O,         E,         U)     &kp I          &kp D      HRMR(H,        T,         N)     &kp S
            &kp COLON  &kp Q      &kp J      &kp K      &kp X          &kp B      &kp M      &kp W      &kp V      &kp Z
                                         &lt 1 FSLH &mt LSHFT BSPC     &lt 2 SPACE  &mt LCTL TAB
            >;
        };

        lower {
            bindings = <
            &trans     &trans     &trans     &trans     &trans     &trans     &kp N7     &kp N8     &kp N9     &kp DEL
            &kp LG(N1) &kp LG(N2) &kp LG(N3) &kp LG(N4) &kp LG(N5) &kp PIPE   &kp N4     &kp N5     &kp N6     &kp BSLH
            &kp LG(N6) &kp LG(N7) &kp LG(N8) &kp LG(N9) &kp LG(N0) &kp UNDER  &kp N1     &kp N2     &kp N3     &kp MINUS
                                              &trans    &trans     &trans     &kp N0
            >;
        };

        raise {
            bindings = <
            &kp F9     &kp F10    &kp F11    &kp F12    &trans         &trans     &trans     &key_repeat &kp LS(INS) &kp DEL
            &kp F5     &kp F6     &kp F7     &kp F8     &kp GRAVE      &kp HOME   &kp LEFT   &kp DOWN    &kp UP      &kp RIGHT
            &kp F1     &kp F2     &kp F3     &kp F4     &kp TILDE      &trans     &trans     &trans      &trans      &kp SEMI
                                             &trans     &trans         &trans     &trans
            >;
        };

        symbols {
            bindings = <
            &kp EXCL     &kp AT       &kp HASH     &kp DLLR  &kp PRCNT       &kp CARET  &kp AMPS   &kp STAR    &kp LPAR  &kp RPAR
            &trans       &trans       &trans       &trans    &trans          &trans     &trans     &key_repeat &kp LBRC  &kp RBRC
            &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans    &bt BT_CLR      &trans     &trans     &trans      &kp UNDER &kp QMARK
                                                   &trans    &trans          &kp EQUAL  &trans
            >;
        };
    };
};
